#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build HomeLede

on:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - 'defconfig'
  schedule:
    - cron: 0 12 * * *
  watch:
    types: started

env:
  REPO_URL: https://github.com/xiaoqingfengATGH/HomeLede.git
  REPO_BRANCH: master
  CONFIG_FILE: defconfig
  DIY_SH: customize.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: true
  AUTO_OPENWRT: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install libevent-dev build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        
    - name: Clone source code
      run: |
        git clone $REPO_URL openwrt
        echo $GITHUB_WORKSPACE
        cd $GITHUB_WORKSPACE/openwrt && ls
        exit

    - name: Prepare feeds
      run: |
        #DIY
        cd openwrt
        sed -i '/infinityfreedom/s/^\(.*\)$/#\1/' feeds.conf.default
        sed -i '/homeclash/s/^\(.*\)$/#\1/' feeds.conf.default
        sed -i '/strongswanInDocker/s/^\(.*\)$/#\1/' feeds.conf.default
        echo "src-git amlogic https://github.com/ophub/luci-app-amlogic.git" >> feeds.conf.default
        sed -i '35a ./feeds/luci/themes/luci-theme-argon' prepareCompile.sh
        ./prepareCompile.sh

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: env.SSH_ACTIONS == 'true'

    - name: Download package
      id: package
      run: |
        cd openwrt
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc)
        #make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        
    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: 打包内核
      uses: unifreq/openwrt_packit@master
      if: env.AUTO_OPENWRT == 'true'
      env:
        WHOAMI: Ye
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        PACKAGE_SOC: s905d
       # KERNEL_AUTO_LATEST: false
        KERNEL_REPO_URL: https://github.com/ophub/kernel/tree/main/pub/stable
        KERNEL_VERSION_NAME: 5.4.185

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        #cd openwrt/bin/targets/*/*
        #rm -rf `ls | grep -v "openwrt-x86-64-generic-squashfs-combined-efi.img.gz"`
        #[ -e openwrt-x86-64-generic-squashfs-combined-efi.img.gz ] && mv openwrt-x86-64-generic-squashfs-combined-efi.img.gz HomeLEDE_`date +%Y%m%d`.img.gz
        #rm -rf `ls | grep -v "s905d_n1"`
        rm -rf packages
        rm -rf `ls | grep -v "openwrt-armvirt-64-default-rootfs.tar.gz"`
        cd /opt/openwrt_packit/output
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        #echo "$PACKAGED_OUTPUTPATH" >> $GITHUB_ENV
        echo "::set-output name=status::success"
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to cowtransfer
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"
        
    - name: Upload firmware to WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"
